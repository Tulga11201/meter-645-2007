#ifndef BL_LCD_GZL_h
#define BL_LCD_GZL_h


#undef BL_LCD_GZL_EXT
#ifndef BL_LCD_GZL_C
#define BL_LCD_GZL_EXT extern
#else
#define BL_LCD_GZL_EXT
#endif

BL_LCD_GZL_EXT volatile INT8U Show_Lcd_Ram[MAX_SEG/2+1];         //0~MAX_SEG
BL_LCD_GZL_EXT volatile INT8U Show_Lcd_Flag;

typedef struct
{
  INT16U Sign;
  INT8U x;        //Seg
  INT8U y;        //com
}LCD_S_D_POS;


//Sx,Seg,Com,以下是常量元素，Sx，单独可以表达一个意思
BL_LCD_GZL_EXT const LCD_S_D_POS LCD_S_Const[]=
{ 
  {0,0,0},			//位置0，表示为空
  {1,34,2},
  {2,34,1},
  {3,34,0},
  {4,35,1},
  {5,35,0},
  {6,36,3},
  {7,22,0},  
  {8,23,2},  
  {9,23,3},
  {10,38,3},
    
  {11,39,1},
  {12,39,2},  
  {13,39,3},
  {14,33,3},
  {15,32,2},
  {16,34,3},  
  {17,32,3},
  {18,32,1},
  {19,35,3},  
  {20,35,2},  
    
  {21,22,3},
  {22,22,2},
  {23,22,1},
  {24,23,0},
  {25,23,1},
  {26,38,0},
  {27,39,0},
  {28,33,1},
  {29,38,1},
  {30,33,2},
    
  {31,33,0},
  {32,32,0},
  //{33,7,2},
  {34,0,3},
  {35,28,0},
  {36,31,0},
  {37,31,1},
  {38,31,2},  
  {39,31,3},
  {40,30,0},
    
  {41,30,1},
  {42,30,2},
  {43,30,3},
  {44,18,3},
  {45,24,0},
  {46,24,1},
  {47,24,2},
  {48,25,2},
  {49,25,1},
  {50,25,0},
  
  {51,16,3},
  {52,26,0},
  {53,26,1},
  {54,27,0},  
  {55,14,3},
  {56,28,1},
  {57,29,0},
  {58,29,1},
  {59,20,3},
  {60,24,3},
    
  {61,25,3},
  {62,26,3},
  {63,26,2},
  {64,27,1},  
  {65,27,2},  
  {66,27,3},  
  {67,28,3},
  {68,28,2},
  {69,29,2},
  {70,29,3}
};
 
#define MAX_S_NUM (sizeof(LCD_S_Const)/sizeof(LCD_S_D_POS))
//Sx,Seg,Com,以下是常量元素，但必须与Nx一起表示一个变量
BL_LCD_GZL_EXT const LCD_S_D_POS LCD_D_Const[]=
{
  {0,0,0},      //位置0，表示为空
  {1,2,3},      //:
  {2,8,3},      //.
  {3,6,3},     //.
  {4,10,3},      //.
  {5,12,3}
};

#define MAX_D_NUM (sizeof(LCD_D_Const)/sizeof(LCD_S_D_POS))


#define MAX_AU_ID 4
typedef struct
{
  INT16U Sign;    //Sx, Dx,  Nx
  INT8U x;                    //Seg
  INT8U y;                    //com
  //INT8U RelaType;             //关联类型
  //INT8U RelaNum;             //关联类型
  //INT8U RelaID[MAX_AU_ID];    //关联元素
}LCD_N_POS;

BL_LCD_GZL_EXT const LCD_N_POS LCD_N_Const[]=
{
  //Sx,Seg,Com,以下是变量元素，8字符，A~G联合才能表达一个意思,同时和其它辅助标志关联
  {0,0,0},			 //位置0，表示为空
  
  {1,37,0},      //A
  {1,37,1},      //B
  {1,37,2},      //C
  {1,47,3},      //D
  {1,36,2},      //E
  {1,36,0},      //F
  {1,36,1},      //G
  
  {2,1,0},      //A
  {2,1,1},      //B
  {2,1,2},      //C
  {2,1,3},      //D
  {2,0,2},      //E
  {2,0,0},      //F
  {2,0,1},      //G
  
  {3,3,0},      //A
  {3,3,1},      //B
  {3,3,2},      //C
  {3,3,3},      //D
  {3,2,2},      //E
  {3,2,0},      //F
  {3,2,1},      //G
  
  {4,5,0},      //A
  {4,5,1},      //B
  {4,5,2},      //C
  {4,5,3},      //D
  {4,4,2},      //E
  {4,4,0},      //F
  {4,4,1},      //G
  
  {5,7,0},      //A
  {5,7,1},      //B
  {5,7,2},      //C
  {5,7,3},      //D
  {5,6,2},      //E
  {5,6,0},      //F
  {5,6,1},      //G
  
  
  {6,9,0},      //A
  {6,9,1},      //B
  {6,9,2},      //C
  {6,9,3},      //D
  {6,8,2},      //E
  {6,8,0},      //F
  {6,8,1},      //G
  
  {7,11,0},      //A
  {7,11,1},      //B
  {7,11,2},      //C
  {7,11,3},      //D
  {7,10,2},      //E
  {7,10,0},      //F
  {7,10,1},      //G
  
  {8,13,0},      //A
  {8,13,1},      //B
  {8,13,2},      //C
  {8,13,3},      //D
  {8,12,2},      //E
  {8,12,0},      //F
  {8,12,1},      //G
  
  {9,15,0},      //A
  {9,15,1},      //B
  {9,15,2},      //C
  {9,15,3},      //D
  {9,14,2},      //E
  {9,14,0},      //F
  {9,14,1},      //G
  
  
  {10,17,0},      //A
  {10,17,1},      //B
  {10,17,2},      //C
  {10,17,3},      //D
  {10,16,2},      //E
  {10,16,0},      //F
  {10,16,1},      //G
  
  {11,19,0},      //A
  {11,19,1},      //B
  {11,19,2},      //C
  {11,19,3},      //D
  {11,18,2},      //E
  {11,18,0},      //F
  {11,18,1},      //G
  
  
  {12,21,0},      //A
  {12,21,1},      //B
  {12,21,2},      //C
  {12,21,3},      //D
  {12,20,2},      //E
  {12,20,0},      //F
  {12,20,1},      //G 
};


#define MAX_N_NUM (sizeof(LCD_N_Const)/sizeof(LCD_N_POS))
typedef struct
{
  INT8U Type_8;     //0~9,A b,C,d,E,F,上口('O'),下口('o'),=,-
  INT8U Num;        //元素个数
  INT8U Pxy8[7];    //显示的元素都是'A'~'G'组成
}LCD_LED;

//对'8'的描述
BL_LCD_GZL_EXT const LCD_LED LED_Pixy8_Const[]=
{ {0},
  {'0',6,{'A','B','C','D','E','F'}},
  {'1',2,{'B','C'}},
  {'2',5,{'A','B','D','E','G'}},
  {'3',5,{'A','B','C','D','G'}},
  {'4',4,{'B','C','F','G'}},
  {'5',5,{'A','C','D','F','G'}},
  {'6',6,{'A','C','D','E','F','G'}},
  {'7',3,{'A','B','C'}},
  {'8',7,{'A','B','C','D','E','F','G'}},
  {'9',6,{'A','B','C','D','F','G'}},
  
  {'A',6,{'A','B','C','E','F','G'}},
  {'a',6,{'A','B','C','E','F','G'}},
  {'B',5,{'C','D','E','F','G'}},
  {'b',5,{'C','D','E','F','G'}},
  {'C',4,{'A','D','E','F'}},
  {'d',5,{'B','C','D','E','G'}},
  {'D',5,{'B','C','D','E','G'}},
  {'r',2,{'E','G'}},
  {'R',2,{'E','G'}},
  {'E',5,{'A','D','E','F','G'}},
  {'F',4,{'A','E','F','G'}},
  {'G',6,{'A','C','D','E','F','G'}},
  {'H',5,{'B','C','E','F','G'}},
  {'I',2,{'B','C'}},
  {'i',2,{'B','C'}},
  {'L',3,{'D','E','F'}},
  {'l',3,{'D','E','F'}},
  {'O',6,{'A','B','C','D','E','F'}},   //上口
  {'o',4,{'C','D','E','G'}},      			//下口
  {'P',5,{'A','B','E','F','G'}},
  {'=',2,{'A','D'}},
  {'-',1,{'G'}},
  {'U',5,{'B','C','D','E','F'}},
  {'S',5,{'A','C','D','F','G'}},
  {'T',3,{'A','E','F'}},
  {'t',3,{'A','E','F'}},
  {'n',5,{'A','B','C','E','F'}},
  {'N',5,{'A','B','C','E','F'}}
};


#define MAX_LED_NUM (sizeof(LED_Pixy8_Const)/sizeof(LCD_LED))


#endif 
